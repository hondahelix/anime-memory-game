{"version":3,"sources":["components/Header.js","components/Navbar.js","components/Cards.js","components/Footer.js","components/CardGame.js","App.js","index.js"],"names":["Header","className","style","backgroundImage","fontWeight","color","Navabar","props","listStyleType","updateUser","score","topScore","Cards","cardData","map","card","onClick","handleClick","width","id","src","image","backgroundPosition","alt","name","Footer","padding","href","CardGame","state","highScore","CardInfo","clicked","gameLost","resetGame","this","setState","setScores","length","shuffleCards","sort","Math","random","event","preventDefault","clickedId","target","includes","push","backgroundColor","Navbar","Component","App","ReactDOM","render","document","getElementById"],"mappings":"kMAYeA,MAVf,WACI,OACI,qBAAKC,UAAU,4BAA4BC,MAAO,CAACC,gBAAiB,qDAApE,SACI,qBAAKF,UAAU,YAAf,SACI,oBAAIA,UAAU,yBAAyBC,MAAO,CAACE,WAAY,OAAQC,MAAO,QAA1E,qCCMDC,MAVf,SAAiBC,GACb,OACA,sBAAKN,UAAU,uCAAf,UACI,sBAAMA,UAAU,uBAAhB,+BACA,oBAAIC,MAAO,CAACG,MAAO,QAASG,cAAe,QAA3C,SAAuDD,EAAME,aAC7D,qBAAIP,MAAO,CAACG,MAAO,QAASG,cAAe,QAA3C,oBAA6DD,EAAMG,MAAnE,iBAAwFH,EAAMI,gBCavFC,MAlBf,SAAeL,GACX,OACI,sBAAKN,UAAY,YAAjB,UACI,qBAAKA,UAAU,iBAAf,SACMM,EAAMM,SAASC,KAAK,SAAAC,GAAI,OAC1B,qBAAoBd,UAAU,OAAOe,QAAWT,EAAMU,YAAaf,MAAO,CAAEgB,MAAO,SAAnF,SACI,qBAAKC,GAAMJ,EAAKI,GAAIC,IAAKL,EAAKM,MAAOpB,UAAU,eAAeC,MAAQ,CAACoB,mBAAoB,SAAUC,IAAKR,EAAKS,QADxGT,EAAKI,SAIpB,uBACA,2BCAGM,MAVf,WACI,OACA,qBAAKxB,UAAW,6BAA6BC,MAAQ,CAACwB,QAAS,QAA/D,SACI,wBAAQzB,UAAU,0BAAlB,SACI,oBAAGC,MAAS,CAACG,MAAO,SAApB,kEAAoF,mBAAGH,MAAS,CAACG,MAAO,SAAUsB,KAAO,gCAArC,gC,OCsDjFC,E,4MApDXC,MAAQ,CACNC,UAAW,EACXpB,MAAO,EACPD,WAAY,2BACZI,SAAUkB,EACVC,QAAS,GACTC,UAAU,G,EAEZC,UAAY,WACRC,KAAKC,SAAS,CAAC1B,MAAO,IACtByB,KAAKC,SAAS,CAAC3B,WAAY,6BAC3B0B,KAAKC,SAAS,CAACJ,QAAS,KACxBG,KAAKC,SAAS,CAACH,UAAU,K,EAE7BI,UAAY,WACLF,KAAKN,MAAMnB,OAAOyB,KAAKN,MAAMC,WAC5BK,KAAKC,SAAS,CAACN,UAAWK,KAAKN,MAAMnB,MAAM,IAE/CyB,KAAKC,SAAS,CAAC1B,MAAOyB,KAAKN,MAAMG,QAAQM,U,EAE7CC,aAAe,WACXJ,KAAKN,MAAMhB,SAAS2B,MAAK,kBAAMC,KAAKC,SAAW,O,EAEnDzB,YAAc,SAAA0B,GACVA,EAAMC,iBACN,IAAIC,EAAYF,EAAMG,OAAO3B,IACF,IAAxB,EAAKU,MAAMI,SACV,EAAKC,YAED,EAAKL,MAAMG,QAAQe,SAASF,IAChC,EAAKT,SAAS,CAAC3B,WAAY,6BAC3B,EAAK2B,SAAS,CAACH,UAAU,MAGzB,EAAKJ,MAAMG,QAAQgB,KAAKH,GACxB,EAAKT,SAAS,CAAC3B,WAAY,2BAC3B,EAAK8B,eACL,EAAKF,c,uDAIT,OACI,sBAAKnC,MAAO,CAAC+C,gBAAiB,QAA9B,UACI,cAACC,EAAD,CAAQxC,MAAOyB,KAAKN,MAAMnB,MAAOC,SAAUwB,KAAKN,MAAMC,UAAWrB,WAAc0B,KAAKN,MAAMpB,aAC1F,cAAC,EAAD,IACA,cAAC,EAAD,CAAOI,SAAYsB,KAAKN,MAAMhB,SAAUI,YAAekB,KAAKlB,cAC5D,cAAC,EAAD,W,GA/COkC,aCARC,MALf,WACE,OAAO,cAAC,EAAD,KCETC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,U","file":"static/js/main.5247983a.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header(){\n    return (\n        <div className=\"jumbotron jumbotron-fluid\" style={{backgroundImage: \"url(https://wallpaperaccess.com/full/1915194.jpg)\"}}>\n            <div className=\"container\">\n                <h1 className=\"display-4 text-center \" style={{fontWeight: \"bold\", color: \"blue\"}}>Anime Memory Game!</h1>\n            </div>\n        </div>\n    );\n};\n\nexport default Header;","import React from \"react\";\n\nfunction Navabar(props){\n    return (\n    <nav className=\"navbar navbar-dark bg-dark fixed-top\">\n        <span className=\"navbar-brand mb-0 h1\">Anime Memory Game</span>\n        <li style={{color: \"white\", listStyleType: \"none\" }} >{props.updateUser}</li>\n        <li style={{color: \"white\", listStyleType: \"none\"}} >Score: {props.score} | Top Score: {props.topScore}</li> \n    </nav>\n    );\n};\n\nexport default Navabar;\n\n","import React from \"react\";\n\nfunction Cards(props){\n    return(\n        <div className = \"container\">\n            <div className=\"row row-cols-4\">\n                { props.cardData.map( card =>\n                <div  key={card.id} className=\"card\" onClick = {props.handleClick} style={{ width: '10rem'}}>\n                    <img id = {card.id} src={card.image} className=\"card-img-top\" style= {{backgroundPosition: \"cover\"}} alt={card.name}/>\n                </div>)}\n            </div>\n            <br></br>\n            <br></br>\n        </div>\n    );\n}\n\n\n\n\nexport default Cards;","import React from \"react\";\n\nfunction Footer(){\n    return (\n    <div className =\"footer navbar-dark bg-dark\" style ={{padding: \"15px\"}} >\n        <footer className=\"page-footer text-center\">\n            <p style = {{color: \"white\"}} >If you liked this app check out my other projects on <a style = {{color: \"white\"}} href = \"https://github.com/hondahelix\">Git hub!!!</a></p>\n        </footer>\n    </div>\n    );\n};\n\nexport default Footer;","import Header from \"./Header\";\nimport Navbar from \"./Navbar\";\nimport Cards from \"./Cards\";\nimport Footer from \"./Footer\";\nimport React, { Component } from \"react\";\nimport CardInfo from \"./cards.json\";\n\nclass CardGame extends Component {\n    state = {\n      highScore: 0,\n      score: 0,\n      updateUser: \"Click an Image to Begin!\",\n      cardData: CardInfo,\n      clicked: [],\n      gameLost: false\n    };\n    resetGame = function(){\n        this.setState({score: 0});\n        this.setState({updateUser: \"Click an Image to Begin!\"});\n        this.setState({clicked: []});\n        this.setState({gameLost: false});\n    }\n    setScores = function(){\n        if(this.state.score>=this.state.highScore){\n            this.setState({highScore: this.state.score+1});\n        }\n        this.setState({score: this.state.clicked.length});\n    }\n    shuffleCards = function(){\n        this.state.cardData.sort(() => Math.random() - 0.5);\n    }\n    handleClick = event => {\n        event.preventDefault();\n        var clickedId = event.target.id;\n        if(this.state.gameLost === true){\n            this.resetGame();\n        }\n        else if(this.state.clicked.includes(clickedId)){\n            this.setState({updateUser: \"You guessed incorrectly!\"});\n            this.setState({gameLost: true});\n        }\n        else{\n            this.state.clicked.push(clickedId);\n            this.setState({updateUser: \"You guessed correctly!\"});\n            this.shuffleCards();\n            this.setScores();\n        }\n      };\n    render(){\n        return(\n            <div style={{backgroundColor: \"gray\"}}>\n                <Navbar score={this.state.score} topScore={this.state.highScore} updateUser = {this.state.updateUser}/>\n                <Header />\n                <Cards cardData = {this.state.cardData} handleClick = {this.handleClick}/>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default CardGame;","import CardGame from \"./components/CardGame\";\n\nfunction App() {\n  return <CardGame/>;\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}